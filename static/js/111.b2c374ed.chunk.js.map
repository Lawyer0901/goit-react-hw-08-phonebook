{"version":3,"file":"static/js/111.b2c374ed.chunk.js","mappings":"6LAEO,SAASA,IACd,OACE,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,WAG1D,C,sJCRYC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAKjB,GAA4BC,EAAAA,EAAAA,UAJP,CACnBC,MAAO,GACPC,SAAU,KAEZ,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACMC,EAAoB,SAAAC,GACxB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACfP,GAAU,SAAAQ,GAAI,yBAAUA,GAAV,cAAiBD,EAAOD,GAAxB,GACf,EAEKG,EAAe,SAAAL,GACnBA,EAAMM,iBACNR,GAAa,GACbR,GAASiB,EAAAA,EAAAA,IAAMZ,IACfG,GAAa,EAEd,EAED,OACE,gCACGD,IAAa,SAAChB,EAAA,EAAD,KACd,wCACA,kBAAM2B,SAAUH,EAAhB,WACE,mBAAOI,QAAQ,GAAf,mBAEE,kBACEC,KAAK,QACLP,KAAK,QACLD,MAAOP,EAAOF,MACdkB,SAAUZ,QAGd,mBAAOU,QAAQ,GAAf,sBAEE,kBACEC,KAAK,WACLP,KAAK,WACLD,MAAOP,EAAOD,SACdiB,SAAUZ,QAGd,mBAAQS,SAAUH,EAAlB,wBAIP,EChDD,EAJc,WACZ,OAAO,SAAChB,EAAD,GACR,C","sources":["components/Loader/Loader.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import { Vortex } from 'react-loader-spinner';\n\nexport function Loader() {\n  return (\n    <Vortex\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"vortex-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"vortex-wrapper\"\n      colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n    />\n  );\n}\n","import { Loader } from 'components/Loader/Loader';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { login } from 'redux/auth/auth.operation';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const initialState = {\n    email: '',\n    password: '',\n  };\n  const [values, setValues] = useState(initialState);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleChangeInput = event => {\n    const { value, name } = event.target;\n    setValues(prev => ({ ...prev, [name]: value }));\n  };\n  //   console.log(values);\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsLoading(true);\n    dispatch(login(values));\n    setIsLoading(false);\n    // setValues(initialState);\n  };\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <h2>Login Page</h2>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={values.email}\n            onChange={handleChangeInput}\n          />\n        </label>\n        <label htmlFor=\"\">\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={values.password}\n            onChange={handleChangeInput}\n          />\n        </label>\n        <button onSubmit={handleSubmit}>Login</button>\n      </form>\n    </>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return <LoginForm />;\n};\n\nexport default Login;\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","LoginForm","dispatch","useDispatch","useState","email","password","values","setValues","isLoading","setIsLoading","handleChangeInput","event","target","value","name","prev","handleSubmit","preventDefault","login","onSubmit","htmlFor","type","onChange"],"sourceRoot":""}