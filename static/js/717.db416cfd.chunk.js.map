{"version":3,"file":"static/js/717.db416cfd.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contact/contact.selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactLisItem.jsx","redux/filter/filter.selector.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  button {\n    width: 190px;\n    margin: 0 auto;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const Input = styled.input`\n  padding: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  margin-left: ${p => p.theme.space[4]}px;\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.sm};\n  outline: none;\n  transition: transform 250ms linear, border-color 250ms linear,\n    color 250ms linear;\n`;\n\nexport const AddButton = styled.button`\n  background-color: #c2fbd7;\n  border-radius: 100px;\n  box-shadow: rgba(44, 187, 99, 0.2) 0 -25px 18px -14px inset,\n    rgba(44, 187, 99, 0.15) 0 1px 2px, rgba(44, 187, 99, 0.15) 0 2px 4px,\n    rgba(44, 187, 99, 0.15) 0 4px 8px, rgba(44, 187, 99, 0.15) 0 8px 16px,\n    rgba(44, 187, 99, 0.15) 0 16px 32px;\n  color: green;\n  cursor: pointer;\n  display: inline-block;\n  font-family: CerebriSans-Regular, -apple-system, system-ui, Roboto, sans-serif;\n  padding: 7px 20px;\n  text-align: center;\n  text-decoration: none;\n  transition: all 250ms;\n  border: 0;\n  font-size: 16px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  &:hover {\n    box-shadow: rgba(44, 187, 99, 0.35) 0 -25px 18px -14px inset,\n      rgba(44, 187, 99, 0.25) 0 1px 2px, rgba(44, 187, 99, 0.25) 0 2px 4px,\n      rgba(44, 187, 99, 0.25) 0 4px 8px, rgba(44, 187, 99, 0.25) 0 8px 16px,\n      rgba(44, 187, 99, 0.25) 0 16px 32px;\n    transform: scale(1.05) rotate(-1deg);\n  }\n`;\n","export const selectContacts = state => state.contacts.contacts;\nexport const getItems = state => state.contacts.items;\nexport const getIsLoading = state => state.contacs.isLoading;\n","import { useState } from 'react';\n\nimport { Form, Label, Input, AddButton } from './ContactForm.styled';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contact/contact.operation';\nimport { getItems } from 'redux/contact/contact.selectors';\nexport const ContactForm = () => {\n  const [userName, setUserName] = useState('');\n  const [userNumber, setUserNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getItems);\n  // console.log(contacts);\n  const handleChangeName = e => {\n    const { name, value } = e.target;\n    if (name === 'userName') {\n      setUserName(value);\n    } else if (name === 'userNumber') {\n      setUserNumber(value);\n    }\n  };\n\n  const hendleSubmit = e => {\n    e.preventDefault();\n\n    const newUser = { name: userName, number: userNumber };\n\n    const existUser = contacts.some(el => el.name === newUser.name);\n\n    if (newUser === null || existUser) {\n      alert(`${newUser.name} is already in contacts`);\n      return;\n    } else {\n      dispatch(addContact(newUser));\n      setUserName('');\n      setUserNumber('');\n      console.log(newUser);\n    }\n  };\n\n  return (\n    <Form onSubmit={hendleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"userName\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChangeName}\n          value={userName}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"userNumber\"\n          value={userNumber}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChangeName}\n        />\n      </Label>\n      <AddButton>Add Contact</AddButton>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  justify-content: center;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  color: ${p => p.theme.colors.accent};\n`;\n\nexport const SpanText = styled.span`\n  /* display: block; */\n  color: ${p => p.theme.colors.red};\n`;\n\nexport const Tabledata = styled.td`\n  cursor: pointer;\n  padding: ${p => p.theme.space[2]}px;\n  outline: ${p => p.theme.borders.normal} ${p => p.theme.colors.text};\n  transition: color 250ms linear, background-color 250ms linear,\n    transform 250ms linear;\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.white};\n    background-color: ${p => p.theme.colors.backgroundTableHead};\n  }\n`;\n\nexport const Table = styled.table`\n  width: 50%;\n  text-align: center;\n`;\n\nexport const Wraper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const DeleteButton = styled.button`\n  /* CSS */\n  background-color: #c2fbd7;\n  border-radius: 100px;\n  box-shadow: rgba(44, 187, 99, 0.2) 0 -25px 18px -14px inset,\n    rgba(44, 187, 99, 0.15) 0 1px 2px, rgba(44, 187, 99, 0.15) 0 2px 4px,\n    rgba(44, 187, 99, 0.15) 0 4px 8px, rgba(44, 187, 99, 0.15) 0 8px 16px,\n    rgba(44, 187, 99, 0.15) 0 16px 32px;\n  color: green;\n  cursor: pointer;\n  display: inline-block;\n  font-family: CerebriSans-Regular, -apple-system, system-ui, Roboto, sans-serif;\n  padding: 7px 20px;\n  text-align: center;\n  text-decoration: none;\n  transition: all 250ms;\n  border: 0;\n  font-size: 16px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  &:hover {\n    box-shadow: rgba(44, 187, 99, 0.35) 0 -25px 18px -14px inset,\n      rgba(44, 187, 99, 0.25) 0 1px 2px, rgba(44, 187, 99, 0.25) 0 2px 4px,\n      rgba(44, 187, 99, 0.25) 0 4px 8px, rgba(44, 187, 99, 0.25) 0 8px 16px,\n      rgba(44, 187, 99, 0.25) 0 16px 32px;\n    transform: scale(1.05) rotate(-1deg);\n  }\n`;\n","import { Tabledata, DeleteButton } from '../ContactList/ContactList.styled';\n\nexport function ContactListItem({ name, phone, onClick }) {\n  return (\n    <>\n      <tbody>\n        <tr>\n          <Tabledata>{name}</Tabledata>\n          <Tabledata>{phone}</Tabledata>\n          <Tabledata>\n            <DeleteButton onClick={onClick}>Delete contact</DeleteButton>\n          </Tabledata>\n        </tr>\n      </tbody>\n    </>\n  );\n}\n","export const getFilter = state => state.filter.filter;\n","import { ContactListItem } from './ContactLisItem';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { Table, Wraper, Tabledata } from '../ContactList/ContactList.styled';\nimport { useEffect } from 'react';\nimport { deleteContact, fetchContacts } from 'redux/contact/contact.operation';\nimport { getFilter } from 'redux/filter/filter.selector';\nimport { getItems } from 'redux/contact/contact.selectors';\n// import { Loader } from 'components/Loader/Loader';\n\nexport function ContactList() {\n  const contacts = useSelector(getItems);\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\n  // const isLoading = useSelector(getIsLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return contacts.length > 0 ? (\n    <Wraper>\n      <Table>\n        <thead>\n          <tr>\n            <Tabledata>Contact Name</Tabledata>\n            <Tabledata>Contact number</Tabledata>\n            <Tabledata>Delete Contact</Tabledata>\n          </tr>\n        </thead>\n        {/* {isLoading && <Loader />} */}\n        {filteredContacts.map(el => {\n          return (\n            <ContactListItem\n              key={el.id}\n              name={el.name}\n              phone={el.number}\n              onClick={() => dispatch(deleteContact(el.id))}\n            />\n          );\n        })}\n      </Table>\n    </Wraper>\n  ) : (\n    <p>There is no contact</p>\n  );\n}\n","import styled from 'styled-components';\n\nexport const LabelFilter = styled.label`\n  display: block;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[3]}px;\n`;\n\nexport const InputFilter = styled.input`\n  padding: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[3]}px;\n  margin-left: ${p => p.theme.space[4]}px;\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.sm};\n  outline: none;\n  transition: transform 250ms linear, border-color 250ms linear,\n    color 250ms linear;\n  + button {\n    width: 190px;\n    margin: 0 auto ${p => p.theme.space[3]}px;\n  }\n  :focus,\n  :hover,\n  :focus-visible {\n    color: ${p => p.theme.colors.text};\n    border-color: ${p => p.theme.colors.primary};\n    transform: scale(1.1);\n  }\n`;\n","import { LabelFilter, InputFilter } from './Filter.styled';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { filterContact } from '../../redux/filter/filter.slice';\nimport { getFilter } from 'redux/filter/filter.selector';\n\nexport function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleFilterInput = ({ target: { value } }) => {\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <LabelFilter htmlFor=\"\">\n      Finde Contact by Name\n      <InputFilter\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilterInput}\n        value={filter}\n      />\n    </LabelFilter>\n  );\n}\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","Label","p","theme","space","Input","borders","normal","radii","sm","AddButton","getItems","state","contacts","items","ContactForm","useState","userName","setUserName","userNumber","setUserNumber","dispatch","useDispatch","useSelector","handleChangeName","e","target","name","value","onSubmit","preventDefault","newUser","number","existUser","some","el","alert","addContact","console","log","type","pattern","title","required","onChange","Tabledata","colors","accent","red","text","white","backgroundTableHead","Table","Wraper","DeleteButton","ContactListItem","phone","onClick","getFilter","filter","ContactList","filteredContacts","toLowerCase","includes","useEffect","fetchContacts","length","map","deleteContact","id","LabelFilter","InputFilter","primary","Filter","htmlFor","filterContact"],"sourceRoot":""}